condition1 = condition_table %>%
filter(name == condition1) %>%
filter(experiment_id == exp_id) %>%
select(c('id'))
condition2 = condition_table %>%
filter(name == condition2) %>%
filter(experiment_id == exp_id) %>%
select(c('id'))
print(kegg)
print(condition1_id)
src = pathview %>%
filter(condition1_id == condition1)
src
src = pathview %>%
filter(condition1_id == '8')
src
src = pathview %>%
filter(condition1_id == condition1[1])
src
src = pathview %>%
filter(condition1_id == condition1$id[1])
src
src = pathview %>%
filter(experiment_id == exp_id) %>%
filter(condition1_id == condition1$id[1]) %>%
filter(condition2_id == condition2$id[1]) %>%
filter(kegg == kegg) %>%
select(c('location'))
src
src = pathview %>%
filter(experiment_id == exp_id) %>%
filter(condition1_id == condition1$id[1]) %>%
filter(condition2_id == condition2$id[1]) %>%
filter(kegg == kegg)
src
src = pathview %>%
filter(kegg == kegg) %>%
filter(experiment_id == exp_id)
src
View(src)
View(src)
sum(pathview$kegg == kegg)
pathview$kegg
sum(pathview$kegg == "path:hsa00100")
sum(pathview$kegg == kegg)
kegg= "path:hsa00100"
sum(pathview$kegg == kegg)
src = pathview %>%
filter(kegg == kegg) %>%
filter(experiment_id == exp_id) %>%
filter(condition1_id == condition1$id[1]) %>%
filter(condition2_id == condition2$id[1])
src
exp_id = "2"
condition1 = "TGFb+10uM IW-1973"
condition2 = "Vehicle"
kegg= "path:hsa00100"
condition1 = condition_table %>%
filter(name == condition1) %>%
filter(experiment_id == exp_id) %>%
select(c('id'))
condition2 = condition_table %>%
filter(name == condition2) %>%
filter(experiment_id == exp_id) %>%
select(c('id'))
print(kegg)
print(condition1_id)
src = pathview %>%
filter(kegg == kegg) %>%
filter(experiment_id == exp_id) %>%
filter(condition1_id == condition1$id[1]) %>%
filter(condition2_id == condition2$id[1])
src
src = pathview %>%
filter(kegg == kegg) %>%
filter(experiment_id == exp_id & condition1_id == condition1$id[1] & condition2_id == condition2$id[1])
src
src = pathview %>%
filter(experiment_id == exp_id & condition1_id == condition1$id[1] & condition2_id == condition2$id[1])
src
kegg_name= "path:hsa00100"
src = pathview %>%
filter(experiment_id == exp_id & condition1_id == condition1$id[1] & condition2_id == condition2$id[1]) %>%
filter(kegg ==kegg_name)
src
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
exp_id = "2"
kegg_name = "path:hsa00100"
condition1 = "TGFb+1uM IW-1973"
condition2 = "Vehicle"
condition1 = condition_table %>%
filter(name == condition1) %>%
filter(experiment_id == exp_id) %>%
select(c('id'))
condition2 = condition_table %>%
filter(name == condition2) %>%
filter(experiment_id == exp_id) %>%
select(c('id'))
src = pathview %>%
filter(experiment_id == exp_id & condition1_id == condition1$id[1] & condition2_id == condition2$id[1]) %>%
filter(kegg ==kegg_name)
print(src$location)
src
exp_id = "2"
kegg_name = "path:hsa00100"
condition1 = "TGFb+1uM IW-1973"
exp_id = "2"
kegg_name = "path:hsa00100"
condition1 = "TGFb+10uM IW-1973"
condition2 = "Vehicle"
condition1 = condition_table %>%
filter(name == condition1) %>%
filter(experiment_id == exp_id) %>%
select(c('id'))
condition2 = condition_table %>%
filter(name == condition2) %>%
filter(experiment_id == exp_id) %>%
select(c('id'))
src = pathview %>%
filter(experiment_id == exp_id & condition1_id == condition1$id[1] & condition2_id == condition2$id[1]) %>%
filter(kegg ==kegg_name)
src
print(src$location)
print(src$location[1])
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
View(uniprot_table)
View(pathview)
View(pathview)
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
library(png)
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
src  = "/data/cofactor_genomics/analysis_result/IWP0004JJ/IWP0004JJ/pathview/condition_3_vs_0/hsa05165.condition_3_vs_0.png"
outfile<- tempfile(fileext = '.png')
img <- readPNG(src)
src  = "/home/xfan/python_RNA_Seq_Database/IWP0004JJ/pathview/condition_3_vs_0/hsa05165.condition_3_vs_0.png"
img <- readPNG(src)
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
?rasterImage
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
src  = "data/IWP0004JJ/pathview/condition_3_vs_0/hsa05165.condition_3_vs_0.png"
img <- readPNG(src)
getwd()
src  = "./RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page/data/IWP0004JJ/pathview/condition_3_vs_0/hsa05165.condition_3_vs_0.png"
img <- readPNG(src)
img
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
img <- readPNG(src)
rasterImage(img, usr[1], usr[3], usr[2], usr[4])
usr<-par("usr")
rasterImage(img, usr[1], usr[3], usr[2], usr[4])
png("out.png", width=w, height=h)
h<-dim(img)[1]
w<-dim(img)[2]
png("out.png", width=w, height=h)
par(mar=c(0,0,0,0), xpd=NA, mgp=c(0,0,0), oma=c(0,0,0,0), ann=F)
plot.new()
plot.window(0:1, 0:1)
usr<-par("usr")
rasterImage(img, usr[1], usr[3], usr[2], usr[4])
dev.off()
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
library(devtools)
?par
data = rbind(data1, data2)
shiny::runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
filterDiffGeneTable <- function(diff_gene_table, condition_table, condition1, condition2, fdr){
data <- diff_gene_table
if (condition1 != "All" & condition2 != 'All'){
c1_id = condition_table$id[condition_table$name == condition1]
c2_id = condition_table$id[condition_table$name == condition2]
validated =  as.numeric(c1_id) > as.numeric(c2_id)
validate(
need(validated,"No results, choose opposite comparison")
)
filter = diff_gene_table$condition1_id ==c1_id & diff_gene_table$condition2_id ==c2_id
data <- diff_gene_table[filter,]
}
data <- data[data$fdr < fdr, c(-1,-2)]
#format the data
data$fdr <- format(as.numeric(data$fdr), scientific = T, digits=4)
data$pvalue <- format(as.numeric(data$pvalue), scientific = T, digits=4)
data$logfc <- round(as.numeric(data$logfc), 3)
# data$logcpm <- round(as.numeric(data$logcpm), 3)
# data$lr <- round(as.numeric(data$lr), 3)
return(data)
}
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
dim(kegg_pathway_analysis)
expId = 2
kegg_table = kegg_pathway_analysis %>% filter(experiment_id == expId)
dim(kegg_table)
condition = condition %>% select(c('id', 'name'))
condition = condition_table
condition = condition %>% select(c('id', 'name'))
kegg_table = merge(kegg_table, condition, by.x= 'condition1_id', by.y = 'id', all.x= T)
dim(kegg_table)
kegg_table = merge(kegg_table, condition, by.x= 'condition2_id', by.y = 'id', all.x= T)
dim(kegg_table)
kegg_table = merge(kegg_table, kegg_pathways, by.x = 'kegg_pathway_id', by.y = "kegg_id", all.x=T)
dim(kegg_table)
kegg_table$fdr_up
kegg_table
View(gene_table)
View(kegg_table)
head(kegg_table)
kegg_table = kegg_table[,c(3,2,1,5:12,14,15,16)]
head(kegg_table)
sum(kegg_table$fdr_up <0.05)
dim(kegg_table)
kegg_table = kegg_pathway_analysis %>% filter(experiment_id == expId)
View(kegg_table)
View(kegg_table)
sum(kegg_table$fdr_down <0.05)
kegg_table = merge(kegg_table, condition, by.x= 'condition1_id', by.y = 'id', all.x= T)
kegg_table = merge(kegg_table, condition, by.x= 'condition2_id', by.y = 'id', all.x= T)
kegg_table = merge(kegg_table, kegg_pathways, by.x = 'kegg_pathway_id', by.y = "kegg_id", all.x=T)
kegg_table = kegg_table[,c(3,2,1,5:12,14,15,16)]
View(experiment_table2)
View(gene_table)
View(kegg_table)
kegg_table = kegg_pathway_analysis %>% filter(experiment_id == expId)
kegg_table = merge(kegg_table, condition, by.x= 'condition1_id', by.y = 'id', all.x= T)
kegg_table = merge(kegg_table, condition, by.x= 'condition2_id', by.y = 'id', all.x= T)
kegg_table = merge(kegg_table, kegg_pathways, by.x = 'kegg_pathway_id', by.y = "kegg_id", all.x=T)
head(kegg_table)
View(kegg_pathway_analysis)
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
shiny::runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page')
shiny::runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - view')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - view')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - view')
shiny::runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - view')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - view')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - view')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - view')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - view')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - view')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - view')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - view')
dir <- "~/RNA_Seq/RNA_Seq/IWP0004JJ/Quantifier"
list.files(dir)
dir <- "~/RNA_Seq/RNA_Seq/IWP0003JJ/Quantifier"
list.files(dir)
dir <- "~/RNA_Seq/RNA_Seq/IWP0003JJ/Quantifier"
list.files(dir)
dir <- "~/RNA_Seq/RNA_Seq/IWP0003JJ/Quantifier/"
files = list.files(dir)
filter <- sapply(files, function(x){
grepl("deseq2", x)
})
filter
files <- files[filter]
length(files)
files
write.csv(d, paste0(dir,"iwp0003jj_count_files.csv"), row.names = F, quote = F)
write.csv(files, paste0(dir,"iwp0003jj_count_files.csv"), row.names = F, quote = F)
files
exp = read.csv(paste0(dir, "IWP003JJ_experiment_table.csv"))
exp = read.csv(paste0(dir, "IWP0003JJ_experiment_table.csv"))
exp
exp = read.csv(paste0(dir, "IWP0003JJ_experiment_table.csv"))
files = exp$ï..sample
files <- sapply(files, function(x){
sub("\.txt\.gz", "_trimmed_count.txt.deseq2",x)
})
files <- sapply(files, function(x){
sub(".txt.gz", "_trimmed_count.txt.deseq2",x)
})
files
?files
?sub
sub(".txt.gz", "_trimmed_count.txt.deseq2",x, fixed=T)
files <- sapply(files, function(x){
sub(".txt.gz", "_trimmed_count.txt.deseq2",x, fixed=T)
})
files
sub(".txt.gz", "_trimmed_count.txt.deseq2",files[1], fixed=T)
sub(".txt.gz", "_trimmed_count.txt.deseq2",files[1], perl=T)
gsub(".txt.gz", "_trimmed_count.txt.deseq2",files[1], perl=F)
files
exp = read.csv(paste0(dir, "IWP0003JJ_experiment_table.csv"))
files = exp$ï..sample
files <- sapply(files, function(x){
sub(".txt.gz", "_trimmed_count.txt.deseq2",x, fixed=T)
})
exp = read.csv(paste0(dir, "IWP0003JJ_experiment_table.csv"))
files = exp$ï..sample
files
gsub(".txt.gz", "_trimmed_count.txt.deseq2",files[1], perl=F)
files = exp$ï..sample
files <- sapply(files, function(x){
sub(".txt.qz", "_trimmed_count.txt.deseq2",x, fixed=T)
})
files
condition <- factor(c(0,0,1,1,2,2,3,3))
files
condition <- factor(exp$condition)
condition
condition <- factor(exp$number)
condition
outprefix <- "IWP0003JJ"
qcPlots(files, dir, condition, outprefix)
library(RNASeqAna)
qcPlots(files, dir, condition, outprefix)
files
dir <- "~/RNA_Seq/RNA_Seq/IWP0003JJ/Quantifier"
qcPlots(files, dir, condition, outprefix)
condition
qcPlots(files, dir, condition, outprefix)
fit <- edgeRAnaFit(files, dir, group, outprefix)
group <- factor(exp$number)
fit <- edgeRAnaFit(files, dir, group, outprefix)
files
dir
group
sampleDGE <- readDGE(files, path=dir, columns = c(1,2), group=group)
keep <- rowSums(cpm(sampleDGE) > 1) >=2
sample_keep <- sampleDGE[keep, , keep.lib.sizes=FALSE]
sample_keep <- calcNormFactors(sample_keep)
sample_count <- as.data.frame(sample_keep$count)
sample_count$ensembleId <- rownames(sample_keep)
library(devtools)
library(roxygen2)
getwd()
document("./R/my-library/RNASeqAna")
install("./r")
install("./R/my-library/RNASeqAna")
entrez_id_des <- ensemble2entrez(sample_count$ensembleId, species)
a = "human"
a == "human"
document("./R/my-library/RNASeqAna")
install("./R/my-library/RNASeqAna")
entrez_id_des <- ensemble2entrez(sample_count$ensembleId, species)
install("./R/my-library/RNASeqAna")
entrez_id_des <- ensemble2entrez(sample_count$ensembleId, species)
install("./R/my-library/RNASeqAna")
spe = "rat"
install("./R/my-library/RNASeqAna")
entrez_id_des <- ensemble2entrez(sample_count$ensembleId, spe)
install("./R/my-library/RNASeqAna")
fit <- edgeRAnaFit(files, dir, group, outprefix, spe)
fit
group
files
coefs = list(2,3,4,c(0,-1,1,0,0,0,0,0),c(0,-1,0,1,0,0,0,0),c(0,0,-1,1,0,0,0,0),
c(0,0,0,0,-1,1,0,0),c(0,0,0,0,-1,0,1,0),c(0,0,0,0,-1,0,0,1),
c(0,0,0,0,0,-1,1,0),c(0,0,0,0,0,-1,0,1),c(0,0,0,0,0,0,-1,1),
5,c(0,-1,0,0,0,-1,0,0),c(0,0,-1,0,0,0,1,0),c(0,0,0,-1,0,0,0,1)
)
comparisons = list("condition_1_vs_0","condition_2_vs_0","condition_3_vs_0",
"condition_2_vs_1","condition_3_vs_1","condition_3_vs_2",
"condition_5_vs_4","condition_6_vs_4","condition_7_vs_4",
"condition_6_vs_5","condition_7_vs_5","condition_7_vs_6",
"condition_4_vs_0","condition_5_vs_1","condition_6_vs_2", "condition_7_vs_3")
install("./R/my-library/RNASeqAna")
dfGenes <- list()
lrts <- list()
for (i in (1:length(coefs))){
coef = coefs[[i]]
return = edgeRdfGenes(fit, coef, spe)
lrts[[i]] = return[[1]]
dfGenes[[i]] = return[[2]]
}
spe = "rat"
for (i in (1:length(coefs))){
coef = coefs[[i]]
return = edgeRdfGenes(fit, coef, spe)
lrts[[i]] = return[[1]]
dfGenes[[i]] = return[[2]]
}
dfGenes <- list()
lrts <- list()
for (i in (1:length(coefs))){
coef = coefs[[i]]
return = edgeRdfGenes(fit, coef, pvalue=1, spe)
lrts[[i]] = return[[1]]
dfGenes[[i]] = return[[2]]
}
class(dfGenes[[1]])
df = edgeRAnaWrite(dfGenes,comparisons, dir, outprefix)
?kegga
install("./R/my-library/RNASeqAna")
pathways = edgeRAnaKEGG(lrts, dfCutOff=0.05, dir, comparisons, outprefix)
pathways = edgeRAnaKEGG(lrts, dfCutOff=0.05, dir, comparisons, outprefix, spe)
sign_path <- getPathway(pathways, fdr=0.05, out= T, dir, outprefix)
info <-getGeneKEGGLinks(species.KEGG = "hsa", convert = FALSE)
View(info)
?getGeneKEGGLinks
info <-getGeneKEGGLinks(species.KEGG = "rno", convert = FALSE)
View(info)
write.csv(info, "kegg_pathway_gene_rat.csv", row.names = F, quote = F)
?goana
?enrichPathway
library(ReactomePA)
?enrichPathway
reactome <- edgeRAnaReactome(df, dfCutOff=0.05, fdr=0.01, dir, comparisons, outprefix, spe)
install("./R/my-library/RNASeqAna")
reactome <- edgeRAnaReactome(df, dfCutOff=0.05, fdr=0.01, dir, comparisons, outprefix, spe)
source("https://bioconductor.org/biocLite.R")
biocLite("org.Rn.eg.db")
source("https://bioconductor.org/biocLite.R")
biocLite("org.Rn.eg.db")
source("https://bioconductor.org/biocLite.R")
biocLite("org.Rn.eg.db")
library(ReactomePA)
reactome <- edgeRAnaReactome(df, dfCutOff=0.05, fdr=0.01, dir, comparisons, outprefix, spe)
source("https://bioconductor.org/biocLite.R")
biocLite("org.Rn.eg.db")
save.image("~/RNA_Seq/RNA_Seq/IWP0003JJ/Quantifier/iwp0003jj_workspace.RData")
library(edgeR)
?kegga
getKEGGPathwayNames(species.KEGG = "rno", remove.qualifier = FALSE)
a = getKEGGPathwayNames(species.KEGG = "rno", remove.qualifier = FALSE)
write.csv(a, "kegg_pathway_rat.csv", row.names=F, quote=F)
count = read.table(paste0(dir,"/", file1), header = F)
file1 = "9-58K_sequence_trimmed_count.txt"
file2 = "ensembl_gene_length_rat"
count = read.table(paste0(dir,"/", file1), header = F)
paste0(dir,"/", file1)
dir <- "~/RNA_Seq/RNA_Seq/IWP0003JJ/Quantifier"
file1 = "9-58K_sequence_trimmed_count.txt"
file2 = "ensembl_gene_length_rat"
count = read.table(paste0(dir,"/", file1), header = F)
file1 = "9-58K_sequence_trimmed_count.txt.deseq2"
file2 = "ensembl_gene_length_rat"
count = read.table(paste0(dir,"/", file1), header = F)
count
ref = read.table(paste0(dir,"/", file2), header = F)
ref
ref = read.csv(paste0(dir,"/", file2))
file2 = "ensembl_gene_length_rat.csv"
ref = read.csv(paste0(dir,"/", file2))
dim(count)
dim(ref)
count
count$V1
ref$ensembl_id
sum(count$V1 == ref$ensembl_id)
shiny::runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
View(condition)
View(condition)
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
?subset
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
print(selected_condition_ids)
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
getExpressionGeneTable <- function(condition_table, select_gene_condition, select_gene_gene,exp_id, ensembl_gene_table){
#get condition ids
selected_condition_ids = condition_table %>% filter(name %in% selcct_gene_condition)
print(selected_condition_ids)
condition_selected <- condition_table$name %in% select_gene_condition
condition_sub <- subset(condition_table, condition_selected)
#get sub sample table
sample_sub =  sample %>% filter(experiment_id == exp_id)
print(condition_sub)
print(sample_sub)
target = merge(condition_sub, sample_sub, by.x="id", by.y = "condition_id", all.x=T)
gene_id_selected = ensembl_gene_table$gene_name %in% select_gene_gene
select_gene_gene_id = subset(ensembl_gene_table, gene_id_selected)
gene_expression_table =  gene_expression %>%
filter(sample_id %in% target$sample_id) %>%
filter(gene_id %in% select_gene_gene_id$ensembl_id)
gene_expression_table = merge(gene_expression_table, target, by.x="sample_id", by.y = "sample_id", all.x = T)
gene_expression_table = merge(gene_expression_table, gene_table, by.x="gene_id", by.y = "ensembl_id", all.x = T)
gene_expression_table = gene_expression_table %>% select(c('gene_name', 'expression', 'name', 'sample_name'))
colnames(gene_expression_table) = c('Gene', 'Expression','Condition', 'Sample')
return(gene_expression_table)
}
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
shiny::runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
runApp('RNA_Seq/RNA_Seq/RNA_Seq_report/rna_seq_home_page - new_database')
